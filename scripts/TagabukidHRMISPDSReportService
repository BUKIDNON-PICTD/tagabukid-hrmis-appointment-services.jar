import com.rameses.annotations.*
import com.rameses.common.*
import com.rameses.services.extended.*;

class TagabukidHRMISPDSReportService 
{
	@Service("PersistenceService")
    def persistenceSvc;

	@Service('DateService')
	def dtSvc 

	@Env
	def env;

	@ProxyMethod
	public def getTestReportData(params){
		def data =[:]
			
			def pdsentity = persistenceSvc.read([_schemaname: 'hrmis_pds', objid:params.objid])

			if (pdsentity.familyfatherInfos.size > 0){
				pdsentity.familyfatherInfos[0].father = persistenceSvc.read( [_schemaname:'entityindividual', objid:pdsentity.familyfatherInfos[0].father.objid])
			}
			if (pdsentity.familymotherInfos.size > 0){
				pdsentity.familymotherInfos[0].mother = persistenceSvc.read( [_schemaname:'entityindividual', objid:pdsentity.familymotherInfos[0].mother.objid])
			}
			if (pdsentity.familyspouseInfos.size > 0){
				pdsentity.familyspouseInfos[0].spouse = persistenceSvc.read( [_schemaname:'entityindividual', objid:pdsentity.familyspouseInfos[0].spouse.objid])
			}
			if (pdsentity.familychildInfos.size > 0){
				pdsentity.familychildInfos.each{
					it.child = persistenceSvc.read( [_schemaname:'entityindividual',objid:it.child.objid])
				}
			}else{
				
			}
			def Familychild = []
			def continuedfamilychild = false
			if (pdsentity.familychildInfos.size()>12){
				continuedfamilychild = true
				pdsentity.continuedchilddata = pdsentity.familychildInfos
			}
				
			// 	}
			// 	println pdsentity.continuedchilddata;
			// 	pdsentity.continuedchilddata.each{ a ->
			// 		Familychild.add(a)
			// 	}
			// }
			
			pdsentity.familychildInfos.each{ a ->
				Familychild.add(a)
			}
			int familyx = 12 - Familychild.size();
			for (def familyi = 1;familyi <= familyx ; familyi++){
				Familychild.add([
					child : [name : null]
				])
			}
			pdsentity.familychildInfos = Familychild

			pdsentity.family = [
				fatherdata : pdsentity.familyfatherInfos[0],
				motherdata : pdsentity.familymotherInfos[0],
				spousedata : pdsentity.familyspouseInfos[0],
				childdata : pdsentity.familychildInfos
			]

			def Levels = [
				[ level : "ELEMENTARY",position:1 ],
				[ level : "SECONDARY",position:2  ],
				[ level : "VOCATIONAL / TRADE COURSE",position:3  ],
				[ level : "COLLEGE",position:4  ],
				[ level : "GRADUATE STUDIES",position:5  ],
			]
		
			pdsentity.educationalInfos = pdsentity.educationalInfos.sort{
					it.from.toInteger()
				}
				pdsentity.educationalInfos.each{ y ->
					if (y.level == "TERTIARY"){
						y.level = "COLLEGE"
					}else if (y.level == "PRIMARY"){
						y.level = "ELEMENTARY"
					}
					Levels.each{ x ->
						if (y.level == x.level){
							y.position = x.position
						}
					}
				}
				Levels.each{ b ->
					if (pdsentity.educationalInfos.findAll{it.level == b.level}.size()==0){
						pdsentity.educationalInfos << b
					}
				
				}
				pdsentity.educationalInfos = pdsentity.educationalInfos.sort{
					it.position
				}
			
			def continuededucation = false
			if (pdsentity.educationalInfos.size()>5){
				continuededucation = true
				pdsentity.continuededucationalInfos = pdsentity.educationalInfos

			}
			// else{
			// 	continuededucation = false
			// 	pdsentity.educationalInfos = pdsentity.educationalInfos.sort{
			// 	it.from.toInteger()
			// 	}
			// 	pdsentity.educationalInfos.each{ y ->
			// 		if (y.level == "TERTIARY"){
			// 			y.level = "COLLEGE"
			// 		}else if (y.level == "PRIMARY"){
			// 			y.level = "ELEMENTARY"
			// 		}
			// 		Levels.each{ x ->
			// 			if (y.level == x.level){
			// 				y.position = x.position
			// 			}
			// 		}

			// 	}
			// 	Levels.each{ b ->
			// 		if (pdsentity.educationalInfos.findAll{it.level == b.level}.size()==0){
			// 			pdsentity.educationalInfos << b

			// 		// Levels << pdsentity.educationalInfos
					
			// 	}
				 
			// 	// pdsentity.educationalInfos.findAll{it.level == b.level}.size()==0
			// 	// pdsentity.educationalInfos << b
			// 	}
			// 	pdsentity.educationalInfos = pdsentity.educationalInfos.sort{
			// 		it.position
			// 	}
			// }

			//sample
			
			// pdsentity.edugt5 = false
			// if(pdsentity.educationalInfos.size()>4){
			// 	pdsentity.edugt5 = true
			// }
			

			// pdsentity.educationalInfos.each{ b ->
			// // // 	Levels.findAll{it.level == b.level
			// // // 		// Levels.(b)
			// // // 		// pdsentity.educationalInfos << b
			// 	// Levels.each{it.level == b.level}

			// 	if (pdsentity.educationalInfos.findAll{it.level == b.level}){
			// // // 		pdsentity.educationalInfos << b
			// // // 	}else{
			// 		Levels << pdsentity.educationalInfos
			// 	}
			// }
			// int edu = 5 - Levels.size()
			// for (def educ = 1; educ <= edu; educ++){
			// 	Levels.add([
			// 		school: [name: null]
			// 	])
			// }


			def Civilservice = []
			def continuedcivilservice = false
			if (pdsentity.civilserviceInfos.size()>7){
				continuedcivilservice = true
				pdsentity.continuedcivilserviceInfos = pdsentity.civilserviceInfos
			}
			pdsentity.civilserviceInfos.each{c ->
				Civilservice.add(c)
			}
			int civilservicex = 7 - Civilservice.size();
			for (def civilservicei = 1; civilservicei <= civilservicex ; civilservicei++){
				Civilservice.add([
					eligibility : [name: null]
				])
			}
			pdsentity.civilserviceInfos = Civilservice

			def Workexperience = []
			def continuedworkexperience = false
			if (pdsentity.workexperienceInfos.size()>28){
				continuedworkexperience = true
				pdsentity.continuedworkexperienceInfos = pdsentity.workexperienceInfos
			}
			pdsentity.workexperienceInfos.each{ d ->
				Workexperience.add(d)
			}
			int workx = 28 - Workexperience.size();
			for (def worki = 1; worki <= workx ; worki++){
				Workexperience.add([
					jobposition : [name: null]
				])
			}
			pdsentity.workexperienceInfos = Workexperience

			def Voluntary = []
			def continuedvoluntarywork = false
			if (pdsentity.voluntaryworks.size()>7){
				continuedvoluntarywork = true
				pdsentity.continuedvoluntaryworks = pdsentity.voluntaryworks
			}
			pdsentity.voluntaryworks.each{c ->
				Voluntary.add(c)
			}
			int voluntaryx = 7 - Voluntary.size();
			for (def voluntaryi = 1; voluntaryi <= voluntaryx ; voluntaryi++){
				Voluntary.add([
					voluntarywork : [description: null]
				])
			}
			pdsentity.voluntaryworks = Voluntary

			def Training = []
			def continuedtraining = false
			if (pdsentity.trainings.size()>22){
				continuedtraining = true
				pdsentity.continuedtrainings = pdsentity.trainings
			}
			pdsentity.trainings.each{ e ->
				Training.add(e)
			}
			int trainingx = 21 - Training.size();
			for (def trainingi = 1; trainingi <= trainingx ; trainingi++){
				Training.add([
					training : [name: null]
				])
			}
			pdsentity.trainings = Training



			def Specialskill = []
			pdsentity.skills.each{ e ->
				Specialskill.add(e)
			}
			int skillx = 7 - Specialskill.size();
			for (def skilli = 1; skilli <= skillx ; skilli++){
				Specialskill.add([
					skill : [name: null]
				])
			}
			pdsentity.skills = Specialskill

			def Recognations = []
			pdsentity.recognitions.each{ e ->
				Recognations.add(e)
			}
			int recognitionx = 7 - Recognations.size();
			for (def recognitioni = 1; recognitioni <= recognitionx ; recognitioni++){
				Recognations.add([
					recognition : [name: null]
				])
			}
			pdsentity.recognitions = Recognations


			def Membership = []
			pdsentity.organizations.each{ e ->
				Membership.add(e)
			}
			int organizationx = 7 - Membership.size();
			for (def organizationi = 1; organizationi <= organizationx ; organizationi++){
				Membership.add([
					affiliation : [name: null]
				])
			}
			pdsentity.organizations = Membership

			if (pdsentity.references.size > 0){
				pdsentity.references.each{
					it.reference = persistenceSvc.read( [_schemaname:'entityindividual',objid:it.reference.objid])
				}
			}else{
				
			}


			// def Pdsqstatic = []
			pdsentity.pdsquestions = pdsentity.pdsquestions.sort { 
				it.pdsq.position
			}
			pdsentity.Pdsqstatic = [:]
			pdsentity.pdsquestions.each{ f ->
				pdsentity.Pdsqstatic["position"+ f.pdsq.position] = f.pdsq.position
				pdsentity.Pdsqstatic["answer"+ f.pdsq.position] = f.answer
				// Pdsqstatic.add(f)
			}
			// println "MAO NA NI"+ Pdsqstatic;
			

			def Reference = []
			pdsentity.references.each{g ->
				Reference.add(g)
			}
			int referencesx = 3 - Reference.size();
			for (def referencesi = 1; referencesi <= referencesx ; referencesi++){
				Reference.add([
					reference : [name: null]
				])
			}
			pdsentity.references = Reference

			pdsentity.referenceperson = [
				referencedata : pdsentity.references
			]

			

			data.reportdata = pdsentity
			println pdsentity.educationalInfos.size();
			data.parameters = [
				// LGUNAME  :"PG-BUKIDNON, REGION 10",
				// LGUADDRESS : "Provincial Capitol, City of Malaybalay",
				TITLE :"PERSONAL DATA SHEET",

				CONTINUEDFAMILY_CHILD: continuedfamilychild,
				CONTINUEDEDUCATION: continuededucation,
				CONTINUEDCIVILSERVICE: continuedcivilservice,
				CONTINUEDWORKEXPERIENCES: continuedworkexperience,
				CONTINUEDVOLUNTARYWORK: continuedvoluntarywork,
				CONTINUEDTRAINING : continuedtraining,
			]
		return data;
	}

}
