import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*

import com.rameses.services.extended.*

class TagabukidHRMISPlantillaManagementService extends ActiveCrudNodeService {

	@ActiveDB(value='hrmis_plantilla_management', em='tagabukid_hrmis')
	def em;

	@Env
	def env;

	@Service('DateService')
	def dtSvc 


	@ProxyMethod
	def initCreate(){
		
		def entity = [:];
		entity.objid = 'PM' + new java.rmi.server.UID()
		entity.recordlog = [:]
		entity.recordlog.datecreated = dtSvc.serverDate
        entity.recordlog.createdbyuserid = env.USERID
        entity.recordlog.createdbyuser = env.FULLNAME
        entity.recordlog.dateoflastupdate =  dtSvc.serverDate
        entity.recordlog.lastupdatebyuserid = env.USERID
        entity.recordlog.lastupdatebyuser = env.FULLNAME
        entity.previtemnos = []
        return entity;
 
	}

	public void afterNode( def selectedNode, def list ) {
		// def orgid = dtsSvc.getUserOrg(env.USERID).org.objid
		// list.removeAll( list.findAll{it.orgid != orgid && it.orgid != 'ROOT'} );
		list.each { 
			it.allowSearch = true;
			it.caption = it.name;
			it.filetype = "pm";
			it.children = [  
				[caption:'Plantilla', filetype: 'pm'],
				[caption:'Test', filetype: 'test']
			]
		}

		// if(selectedNode.root == true) {
		// 	list.add(0, [name:'folder', caption:'Details', leaf:true, allowSearch:true]);
		// }	
	}

	@ProxyMethod
	public def getColumns( def o ) {
		def cols = [
			[name:'itemno', caption:'Item No.' ],
			[name:'jobposition.name', caption:'Job Position' ],
			[name:'fund.name', caption:'Fund' ],
			[name:'accounttitle.name', caption:'Account Title' ],
			[name:'isfunded.name', caption:'Funded' ],
			[name:'incrementtype.name', caption:'Increment Type' ],
			[name:'positionserviceclassification.name', caption:'Position Service Classification' ],
			[name:'positionservicesubclassification.name', caption:'Position Service Sub Classification' ],
			[name:'type', caption:'Type' ],
		];
		return cols;
	}

	// public def open(o) {
	// 	return em.findInfo(o);
	// }
	
	public void beforeList( def p ) {
		// println p

		if(p.name == "search") {
			p._listMethod = "getSearch";
		}
		// if( p._tag ) {
		// 	p._listMethod = "getLookup";
		// 	p.type = p._tag;
		// 	if(!p.parentid) p.parentid = '%';
		// }

		// p.orgid = dtsSvc.getUserOrg(env.USERID).org.objid
	}
	
	public void afterList( def p, def list ) {
		list.each { 
			it.filetype = 'pm';
		}
	}
	
	@ProxyMethod
    public def changeParent(o) {
    	
		// def parent = em.findParent(o);
		// addChild(parent);
    	// o.lft = parent.lft + 1;
		// o.rgt = parent.lft + 2;
    	return em.changeParent( o );
    }

    // @ProxyMethod 
    // public void syncFromCloud() {
    // 	def list = []
    // 	def start = 0
    // 	while(true){
    // 		list = acctSvc.getList([searchtext: '%', _start:start, _limit: 25]);
    // 		if(! list ) break;

    // 		list.each { 
    // 			em.save(it);
    // 		}
    // 		start += 25
    // 	}
    // }


}
