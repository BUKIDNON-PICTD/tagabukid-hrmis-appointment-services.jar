import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*

import com.rameses.services.extended.*

class TagabukidSIMService extends ActiveCrudNodeService {

	@ActiveDB(value='pmissuccessindicators', em='tagabukid_hrmis')
	def em;

	@Env
	def env;


    void addNode(parent){
    	em.changeNodeRight([myRight:parent.rgt]);
		em.changeNodeLeft([myRight:parent.rgt]);
    }

    @ProxyMethod
	void addChild(parent){
    	em.changeParentRight([myLeft:parent.lft]);
		em.changeParentLeft([myLeft:parent.lft]);
    }

    public void beforeCreate(o){
    	
    	def parent = em.findParent(o);
    	
    	addChild(parent);

    	o.lft = parent.lft + 1;
		o.rgt = parent.lft + 2;

    }

	public void afterNode( def selectedNode, def list ) {
		list.each { 
			if(selectedNode.root == true) {
				it.folder = true;
			}	
			it.caption = it.code + " (" + it.title + ") ";
			it.filetype = "sim-"+it.type;
			if (it.type == 'pmis'){
				it.children = [ 
					[caption:'MFO', filetype: 'sim-mfo'],
				]
			}
			else if (it.type =='mfo'){
			it.children = [ 
					[caption:'OPCR', filetype: 'sim-op'],
				]
			}
			else if (it.type =='op'){
				it.children = [ 
					[caption:'DPCR', filetype: 'sim-dp'],
				]
			}
			else if (it.type =='dp'){
				it.children = [ 
					[caption:'IPCR', filetype: 'sim-ip']
				]
			}
			
		}
	}

	@ProxyMethod
	public def getColumns( def o ) {
		def cols = [
			// [name:'location', caption:'Hierarchy' ],
			[name:'code', caption:'Code', width:100, maxWidth:200 ],
			[name:'title', caption:'Title' ],
			[name:'allotedbudget', caption:'Alloted Budget'],
			[name:'actualaccomplishment', caption:'Actual Accomplishment'],
			[name:'remarks', caption:'Remarks'],
			[name:'type', caption:'Type' ]
		];
		return cols;
	}

	public def open(o) {
		return em.findInfo(o);
	}

	public void beforeList( def p ) {
		if(p.name == "search") {
			p._listMethod = "getSearch";
		}
		if( p._tag ) {
			p._listMethod = "getLookup";
			p.type = p._tag;
			if(!p.parentid) p.parentid = '%';
		}
	}
	
	public void afterList( def p, def list ) {
		list.each { 
			it.filetype = 'sim-'+it.type;
		}
	}
	
    @ProxyMethod
    public def getSubAccounts(o) {
    	return em.getSubAccounts( o );
    }
    
  	@ProxyMethod
    public def saveSubAccount(o) {
    	return em.save( o );
    }

	// @ProxyMethod
 //    public def changeParent(o) {
    	
	// 	def parent = em.findParent(o);
	// 	addChild(parent);
 //    	o.lft = parent.lft + 1;
	// 	o.rgt = parent.lft + 2;
 //    	return em.changeParent( o );
 //    }

    // @ProxyMethod 
    // public void syncFromCloud() {
    // 	def list = []
    // 	def start = 0
    // 	while(true){
    // 		list = acctSvc.getList([searchtext: '%', _start:start, _limit: 25]);
    // 		if(! list ) break;

    // 		list.each { 
    // 			em.save(it);
    // 		}
    // 		start += 25
    // 	}
    // }


}
